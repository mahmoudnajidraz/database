/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ARCE;

import Model.Employees;
import com.mongodb.BasicDBObject;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.model.Filters;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;
import org.bson.Document;
import org.bson.conversions.Bson;

/**
 *
 * @author pc
 */
public class MainInterface extends javax.swing.JFrame {

    ArrayList<Employees> employee = new ArrayList<>();

    String db_name = "AndalusiaRefreshmentsCompanyEmployees";
    String collectionEmp = "Employees";
    String password = "EmployeesEmployees";
    String connect = "mongodb+srv://Employees:" + password + "@cluster0.tjhks.mongodb.net/?retryWrites=true&w=majority";
    MongoClient client = MongoClients.create(connect);
    MongoDatabase dataBase = client.getDatabase(db_name);
    MongoCollection empCollection = dataBase.getCollection(collectionEmp);
    private Object jTable;

    /**
     * Creates new form MainInterface
     */
    public MainInterface() {
        initComponents();
        GetData();
        showData(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        empName = new java.awt.TextField();
        empAge = new java.awt.TextField();
        empDateOfBirth = new java.awt.TextField();
        empCratAt = new java.awt.TextField();
        empWorkingSystem = new java.awt.TextField();
        empSalary = new java.awt.TextField();
        emplName = new java.awt.List();
        delete = new java.awt.Button();
        update = new java.awt.Button();
        add = new java.awt.Button();
        load = new java.awt.Button();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        label4 = new java.awt.Label();
        label5 = new java.awt.Label();
        label6 = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 0, 102));
        setForeground(new java.awt.Color(0, 204, 255));

        empName.setBackground(new java.awt.Color(153, 153, 255));
        empName.setPreferredSize(new java.awt.Dimension(120, 25));
        empName.setText("Name");

        empAge.setBackground(new java.awt.Color(153, 153, 255));
        empAge.setPreferredSize(new java.awt.Dimension(120, 25));
        empAge.setText("Age");

        empDateOfBirth.setBackground(new java.awt.Color(153, 153, 255));
        empDateOfBirth.setPreferredSize(new java.awt.Dimension(120, 25));
        empDateOfBirth.setText("DateOfBirth");

        empCratAt.setBackground(new java.awt.Color(153, 153, 255));
        empCratAt.setPreferredSize(new java.awt.Dimension(120, 25));
        empCratAt.setText("CreatAt");

        empWorkingSystem.setBackground(new java.awt.Color(153, 153, 255));
        empWorkingSystem.setPreferredSize(new java.awt.Dimension(120, 25));
        empWorkingSystem.setText("WorkingSystem");
        empWorkingSystem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empWorkingSystemActionPerformed(evt);
            }
        });

        empSalary.setBackground(new java.awt.Color(153, 102, 255));
        empSalary.setPreferredSize(new java.awt.Dimension(120, 25));
        empSalary.setText("Salary");

        emplName.setBackground(new java.awt.Color(0, 51, 255));
        emplName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emplNameMouseClicked(evt);
            }
        });
        emplName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emplNameActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(255, 0, 0));
        delete.setLabel("Delete");
        delete.setPreferredSize(new java.awt.Dimension(60, 25));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        update.setBackground(new java.awt.Color(255, 102, 0));
        update.setLabel("Update");
        update.setPreferredSize(new java.awt.Dimension(60, 25));
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        add.setBackground(new java.awt.Color(51, 204, 0));
        add.setLabel("Add");
        add.setPreferredSize(new java.awt.Dimension(60, 25));
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        load.setBackground(new java.awt.Color(0, 204, 204));
        load.setLabel("Load Data");
        load.setPreferredSize(new java.awt.Dimension(60, 25));
        load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadActionPerformed(evt);
            }
        });

        label1.setBackground(new java.awt.Color(204, 255, 204));
        label1.setPreferredSize(new java.awt.Dimension(120, 25));
        label1.setText("Name");

        label2.setBackground(new java.awt.Color(204, 255, 204));
        label2.setPreferredSize(new java.awt.Dimension(120, 25));
        label2.setText("Age");

        label3.setBackground(new java.awt.Color(204, 255, 204));
        label3.setPreferredSize(new java.awt.Dimension(120, 25));
        label3.setText("DateOfBirth");

        label4.setBackground(new java.awt.Color(204, 255, 204));
        label4.setPreferredSize(new java.awt.Dimension(120, 25));
        label4.setText("CreatAt");

        label5.setBackground(new java.awt.Color(204, 255, 204));
        label5.setPreferredSize(new java.awt.Dimension(120, 25));
        label5.setText("WorkingSystem");

        label6.setBackground(new java.awt.Color(204, 255, 204));
        label6.setPreferredSize(new java.awt.Dimension(120, 25));
        label6.setText("Salary");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(empName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(empWorkingSystem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(empCratAt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(empSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(empAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(empDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(emplName, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(load, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(119, 119, 119))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(emplName, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(empName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(empAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(empDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(empCratAt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(empWorkingSystem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(empSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(load, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void empWorkingSystemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empWorkingSystemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empWorkingSystemActionPerformed

    private void emplNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emplNameActionPerformed
        // TODO add your handling code here:
        showData(emplName.getSelectedIndex());

    }//GEN-LAST:event_emplNameActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        deleteData(emplName.getSelectedIndex());

    }//GEN-LAST:event_deleteActionPerformed

    private void loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadActionPerformed
        // TODO add your handling code here:
        GetData();
        showData(0);
    }//GEN-LAST:event_loadActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        new empAdd().setVisible(true);
    }//GEN-LAST:event_addActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
                



    }//GEN-LAST:event_updateActionPerformed

    private void emplNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emplNameMouseClicked

    }//GEN-LAST:event_emplNameMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainInterface().setVisible(true);
            }
        });
    }

    private void GetData() {
        employee.removeAll(employee);
        emplName.removeAll();
        MongoCursor c = empCollection.find().iterator();
        while (c.hasNext()) {
            employee.add(Employees.FromJson((Document) c.next()));

        }
        c.close();
        for (Employees s : employee) {
            emplName.add(s.getName());

        }

    }

    private void showData(int index) {
        empName.setText(employee.get(index).getName());
        empWorkingSystem.setText(employee.get(index).getWorkingSystem());
        empAge.setText(Integer.toString(employee.get(index).getAge()));
        empSalary.setText(Double.toString(employee.get(index).getSalary()));
        empCratAt.setText(employee.get(index).getCreatedAt().toString());
        empDateOfBirth.setText(employee.get(index).getBirth_date());

    }
    
    

    private void deleteData(int index) {
        empCollection.deleteOne(Filters.eq("_id", employee.get(index).getId()));
        GetData();
        showData(0);
        System.out.println("Sucess");

    }
    /*private void updateData(int i) {
    BasicDBObject q  = new BasicDBObject();
    q.put("_id",q.getObjectId("_id"));
    BasicDBObject d = new BasicDBObject();
    d.put("empName", empName.getText());
     d.put("empAge",(Integer.parseInt(empAge.getText())) );
     
    d.put("empCreatAt", empCratAt.getText());
    d.put("empBH", empDateOfBirth.getText());
    d.put("empSalary", empSalary.getText());
    d.put("empWS", empWorkingSystem.getText());
    BasicDBObject update = new BasicDBObject();
    update.put("s" , d);
    empCollection.updateOne(q , update);
    
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button add;
    private java.awt.Button delete;
    private java.awt.TextField empAge;
    private java.awt.TextField empCratAt;
    private java.awt.TextField empDateOfBirth;
    private java.awt.TextField empName;
    private java.awt.TextField empSalary;
    private java.awt.TextField empWorkingSystem;
    private java.awt.List emplName;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.Button load;
    private java.awt.Button update;
    // End of variables declaration//GEN-END:variables
 /*private void aveData() {
     BasicDBObject q  = new BasicDBObject();
    q.put("_id",q.getObjectId("_id"));
    BasicDBObject d = new BasicDBObject();
        Employees e = new Employees();
        e.setCreatedAt(new Timestamp(System.currentTimeMillis()));
        e.setSalary(Double.parseDouble( empSalary.getText().toString()));
        e.setAge(Integer.parseInt(empAge.getText().toString()));
        e.setName(empName.getText().toString());
        e.setWorkingSystem(empWorkingSystem.getText().toString());
        e.setBirth_date(empDateOfBirth.getText().toString());
        Document doc = new Document();
        doc.putAll(e.ToJson());
        BasicDBObject update = new BasicDBObject();
    update.put("s" , d);
    empCollection.updateOne(q , update);
        new MainInterface().setVisible(true);
        this.setVisible(false);
    }*/

    

    
    

        

    

}


